---
title: "5 - Tuning models - Classwork"
subtitle: "Survival analysis with tidymodels"
editor_options: 
  chunk_output_type: console
---

We recommend restarting R between each slide deck!

## Setup

Setup from deck 3

```{r}
library(tidymodels)
library(censored)
library(splines)

data(cat_adoption)

cat_adoption <- 
  cat_adoption %>% 
  mutate(event_time = Surv(time, event), .keep = "unused", .before = everything()) 

set.seed(27)
in_demo <- sample.int(nrow(cat_adoption), 50)
demo_cats <- cat_adoption %>% slice(in_demo)

set.seed(123)
cat_split <- initial_split(cat_adoption %>% slice(-in_demo), prop = 0.8)
cat_train <- training(cat_split)
cat_test <- testing(cat_split)

set.seed(123)
cat_folds <- vfold_cv(cat_train, v = 10)
```

## Tag parameters for tuning

```{r}
rf_spec <- rand_forest(min_n = tune()) %>% 
  set_engine("aorsf") %>% 
  set_mode("censored regression")

rf_wflow <- workflow(event_time ~ ., rf_spec)
rf_wflow
```

## Grid search

```{r}
set.seed(22)
rf_res <- tune_grid(
  rf_wflow,
  cat_folds,
  eval_time = c(90, 30, 60, 120),
  grid = 5
)
```

## Compare results

```{r}
show_best(rf_res)

best_parameter <- select_best(rf_res)
best_parameter
```

## The final fit

```{r}
rf_wflow <- finalize_workflow(rf_wflow, best_parameter)

final_fit <- last_fit(rf_wflow, cat_split, eval_time = c(90, 30, 60, 120)) 

collect_metrics(final_fit)
```

## Your turn

Modify your model workflow to tune one or more parameters.

Use grid search to find the best parameter(s).

```{r}
# Your code here!

```
